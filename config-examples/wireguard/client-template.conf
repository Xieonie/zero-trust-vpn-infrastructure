# WireGuard Client Configuration Template
# This template is used to generate client configurations

[Interface]
# Client private key (unique for each client)
PrivateKey = CLIENT_PRIVATE_KEY

# Client IP address within the VPN network
Address = CLIENT_IP_ADDRESS/32

# DNS servers (use VPN server or trusted DNS)
DNS = 10.8.0.1, 1.1.1.1, 1.0.0.1

# Optional: Custom MTU (adjust if experiencing connectivity issues)
# MTU = 1420

# Optional: Pre/Post scripts for client-side configuration
# PreUp = echo "Connecting to VPN..."
# PostUp = echo "Connected to VPN at $(date)" >> /var/log/wireguard-client.log
# PreDown = echo "Disconnecting from VPN..."
# PostDown = echo "Disconnected from VPN at $(date)" >> /var/log/wireguard-client.log

[Peer]
# Server public key
PublicKey = SERVER_PUBLIC_KEY

# Server endpoint (IP:Port or domain:port)
Endpoint = SERVER_ENDPOINT:51820

# Allowed IPs - determines what traffic goes through the VPN
# 0.0.0.0/0, ::/0 = All traffic (full tunnel)
# 10.8.0.0/24 = Only VPN network traffic
# 192.168.1.0/24 = Only internal network traffic
AllowedIPs = ALLOWED_IPS

# Persistent keepalive to maintain connection through NAT
# Recommended for clients behind NAT/firewall
PersistentKeepalive = 25

# Configuration examples for different use cases:

# Example 1: Full tunnel (all traffic through VPN)
# AllowedIPs = 0.0.0.0/0, ::/0

# Example 2: Split tunnel (only internal networks)
# AllowedIPs = 10.8.0.0/24, 192.168.1.0/24, 172.16.0.0/16

# Example 3: Specific services only
# AllowedIPs = 192.168.1.100/32, 192.168.1.200/32

# Client-specific security considerations:
# 1. Store configuration files securely
# 2. Use file permissions 600 (read/write for owner only)
# 3. Consider using a password manager for key storage
# 4. Regularly update client software
# 5. Monitor for unauthorized access

# Platform-specific notes:

# Linux:
# - Save as /etc/wireguard/wg0.conf
# - Start with: sudo wg-quick up wg0
# - Stop with: sudo wg-quick down wg0
# - Auto-start: sudo systemctl enable wg-quick@wg0

# Windows:
# - Import through WireGuard GUI application
# - Or use wg-quick.exe from command line

# macOS:
# - Import through WireGuard app from App Store
# - Or use Homebrew: brew install wireguard-tools

# iOS/Android:
# - Import via QR code or file
# - Use official WireGuard mobile apps

# Troubleshooting:
# 1. Check if interface is up: ip addr show wg0
# 2. Check routing: ip route show table all
# 3. Test connectivity: ping 10.8.0.1
# 4. Check logs: journalctl -u wg-quick@wg0
# 5. Verify firewall rules: iptables -L -n