# OpenSSL Configuration for Certificate Authority
# Zero Trust VPN Infrastructure PKI

# This configuration file defines the Certificate Authority (CA) settings
# for the Zero Trust VPN infrastructure

[ ca ]
default_ca = CA_default

[ CA_default ]
# Directory and file locations
dir               = /opt/zero-trust-vpn/certificates/ca
certs             = $dir/certs
crl_dir           = $dir/crl
new_certs_dir     = $dir/newcerts
database          = $dir/index.txt
serial            = $dir/serial
RANDFILE          = $dir/private/.rand

# Root CA certificate and private key
private_key       = $dir/private/ca.key.pem
certificate       = $dir/certs/ca.cert.pem

# Certificate Revocation List
crlnumber         = $dir/crlnumber
crl               = $dir/crl/ca.crl.pem
crl_extensions    = crl_ext
default_crl_days  = 30

# Message digest algorithm
default_md        = sha256

# Certificate naming policy
name_opt          = ca_default
cert_opt          = ca_default

# Certificate validity periods
default_days      = 365
preserve          = no

# Certificate policy
policy            = policy_strict

[ policy_strict ]
# The root CA should only sign intermediate certificates that match
countryName             = match
stateOrProvinceName     = match
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ policy_loose ]
# Allow the intermediate CA to sign a more diverse range of certificates
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ req ]
# Options for the `req` tool
default_bits        = 4096
distinguished_name  = req_distinguished_name
string_mask         = utf8only
default_md          = sha256

# Extension to add when the -x509 option is used
x509_extensions     = v3_ca

[ req_distinguished_name ]
# Distinguished name fields
countryName                     = Country Name (2 letter code)
stateOrProvinceName             = State or Province Name
localityName                    = Locality Name
0.organizationName              = Organization Name
organizationalUnitName          = Organizational Unit Name
commonName                      = Common Name
emailAddress                    = Email Address

# Default values
countryName_default             = US
stateOrProvinceName_default     = California
localityName_default            = San Francisco
0.organizationName_default      = Zero Trust VPN Corp
organizationalUnitName_default  = IT Security
emailAddress_default            = ca@company.com

[ v3_ca ]
# Extensions for a typical CA
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ v3_intermediate_ca ]
# Extensions for a typical intermediate CA
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true, pathlen:0
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ usr_cert ]
# Extensions for client certificates
basicConstraints = CA:FALSE
nsCertType = client, email
nsComment = "OpenSSL Generated Client Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth, emailProtection

[ server_cert ]
# Extensions for server certificates
basicConstraints = CA:FALSE
nsCertType = server
nsComment = "OpenSSL Generated Server Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer:always
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth

[ vpn_client_cert ]
# Extensions for VPN client certificates
basicConstraints = CA:FALSE
nsCertType = client
nsComment = "Zero Trust VPN Client Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth

# Custom OID for VPN client identification
# 1.3.6.1.4.1.99999.1 = VPN Client Certificate
1.3.6.1.4.1.99999.1 = ASN1:UTF8String:VPN Client

[ vpn_server_cert ]
# Extensions for VPN server certificates
basicConstraints = CA:FALSE
nsCertType = server
nsComment = "Zero Trust VPN Server Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer:always
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth

# Subject Alternative Names for VPN server
subjectAltName = @alt_names

[ alt_names ]
# VPN server alternative names
DNS.1 = vpn.company.com
DNS.2 = vpn-backup.company.com
DNS.3 = wireguard.company.com
IP.1 = 203.0.113.1
IP.2 = 203.0.113.2

[ device_cert ]
# Extensions for device certificates
basicConstraints = CA:FALSE
nsCertType = client
nsComment = "Zero Trust Device Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth

# Device-specific extensions
# Custom OID for device type
1.3.6.1.4.1.99999.2 = ASN1:UTF8String:Corporate Device

[ iot_device_cert ]
# Extensions for IoT device certificates
basicConstraints = CA:FALSE
nsCertType = client
nsComment = "Zero Trust IoT Device Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth

# Shorter validity period for IoT devices
# Custom OID for IoT device type
1.3.6.1.4.1.99999.3 = ASN1:UTF8String:IoT Device

[ crl_ext ]
# Extension for CRLs
authorityKeyIdentifier=keyid:always

[ ocsp ]
# Extension for OCSP signing certificates
basicConstraints = CA:FALSE
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, digitalSignature
extendedKeyUsage = critical, OCSPSigning

# Certificate transparency extensions
[ ct_precert ]
# Certificate Transparency Pre-certificate
1.3.6.1.4.1.11129.2.4.3 = critical,ASN1:NULL

# Custom certificate policies
[ certificate_policies ]
certificatePolicies = @polsect

[ polsect ]
policyIdentifier = 1.3.6.1.4.1.99999.100
CPS.1 = "https://company.com/cps"
userNotice.1 = @notice

[ notice ]
explicitText = "Zero Trust VPN Certificate Policy"

# Authority Information Access
[ authority_info_access ]
caIssuers;URI.0 = http://ca.company.com/ca.crt
OCSP;URI.0 = http://ocsp.company.com

# CRL Distribution Points
[ crl_distribution_points ]
fullname = URI:http://ca.company.com/ca.crl

# Enhanced key usage for different certificate types
[ enhanced_key_usage_client ]
extendedKeyUsage = clientAuth, emailProtection

[ enhanced_key_usage_server ]
extendedKeyUsage = serverAuth

[ enhanced_key_usage_code_signing ]
extendedKeyUsage = codeSigning

[ enhanced_key_usage_time_stamping ]
extendedKeyUsage = timeStamping

# Name constraints for intermediate CAs
[ name_constraints ]
permitted;DNS.0=company.com
permitted;DNS.1=.company.com
permitted;email.0=company.com
permitted;email.1=.company.com
excluded;IP.0=0.0.0.0/0.0.0.0
excluded;IP.1=::/0

# Policy constraints
[ policy_constraints ]
requireExplicitPolicy = 0
inhibitPolicyMapping = 0

# Inhibit any policy
[ inhibit_any_policy ]
inhibitAnyPolicy = 0

# Freshest CRL
[ freshest_crl ]
fullname = URI:http://ca.company.com/delta.crl

# Certificate validation settings
[ cert_validation ]
# Maximum path length
pathlen = 3

# Certificate transparency settings
[ ct_settings ]
# SCT list extension
1.3.6.1.4.1.11129.2.4.2 = ASN1:OCTET STRING:SCT_LIST

# Hardware security module settings (if using HSM)
[ hsm_settings ]
# PKCS#11 engine configuration
# engine_id = pkcs11
# MODULE_PATH = /usr/lib/opensc-pkcs11.so

# Certificate profile templates
[ template_user ]
# Standard user certificate template
basicConstraints = CA:FALSE
keyUsage = digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth, emailProtection
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer

[ template_admin ]
# Administrator certificate template
basicConstraints = CA:FALSE
keyUsage = digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth, emailProtection
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
# Custom OID for admin role
1.3.6.1.4.1.99999.4 = ASN1:UTF8String:Administrator

[ template_service ]
# Service account certificate template
basicConstraints = CA:FALSE
keyUsage = digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
# Custom OID for service account
1.3.6.1.4.1.99999.5 = ASN1:UTF8String:Service Account